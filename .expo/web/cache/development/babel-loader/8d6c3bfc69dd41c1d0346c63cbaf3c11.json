{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"E:\\\\Project\\\\react-native\\\\lf\\\\node_modules\\\\react-native-maps\\\\lib\\\\web\\\\Leaflet\\\\Circle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { Circle } from 'react-leaflet';\nimport { convertCoordinate } from \"./utils/coordinates\";\nimport { transformProps } from \"./utils/transformProps\";\n\nfunction localTransformProps(props) {\n  var center = props.center,\n      radius = props.radius;\n  return _objectSpread(_objectSpread({}, transformProps(props)), {}, {\n    center: convertCoordinate(center)\n  });\n}\n\nvar ExpoCircle = function (_React$Component) {\n  _inherits(ExpoCircle, _React$Component);\n\n  var _super = _createSuper(ExpoCircle);\n\n  function ExpoCircle() {\n    _classCallCheck(this, ExpoCircle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ExpoCircle, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.ref.setStyleIfChanged(this.props, localTransformProps(props));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var props = localTransformProps(this.props);\n      return React.createElement(Circle, _extends({\n        ref: function ref(_ref) {\n          return _this.ref = _ref;\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return ExpoCircle;\n}(React.Component);\n\nexport { ExpoCircle as default };","map":{"version":3,"sources":["E:/Project/react-native/lf/node_modules/react-native-maps/lib/web/Leaflet/Circle.js"],"names":["React","Circle","convertCoordinate","transformProps","localTransformProps","props","center","radius","ExpoCircle","ref","setStyleIfChanged","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,SAASC,iBAAT;AACA,SAASC,cAAT;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,MAC1BC,MAD0B,GACPD,KADO,CAC1BC,MAD0B;AAAA,MAClBC,MADkB,GACPF,KADO,CAClBE,MADkB;AAGlC,yCACKJ,cAAc,CAACE,KAAD,CADnB;AAEEC,IAAAA,MAAM,EAAEJ,iBAAiB,CAACI,MAAD;AAF3B;AAID;;IAEoBE,U;;;;;;;;;;;;;mCACJH,K,EAAO;AACpB,WAAKI,GAAL,CAASC,iBAAT,CAA2B,KAAKL,KAAhC,EAAuCD,mBAAmB,CAACC,KAAD,CAA1D;AACD;;;6BAEQ;AAAA;;AACP,UAAMA,KAAK,GAAGD,mBAAmB,CAAC,KAAKC,KAAN,CAAjC;AACA,aAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,aAAAI,IAAG;AAAA,iBAAK,KAAI,CAACA,GAAL,GAAWA,IAAhB;AAAA;AAAhB,SAA0CJ,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EARqCL,KAAK,CAACW,S;;SAAzBH,U","sourcesContent":["import * as React from 'react';\r\nimport { Circle } from 'react-leaflet';\r\n\r\nimport { convertCoordinate } from './utils/coordinates';\r\nimport { transformProps } from './utils/transformProps';\r\n\r\nfunction localTransformProps(props) {\r\n  const { center, radius } = props;\r\n\r\n  return {\r\n    ...transformProps(props),\r\n    center: convertCoordinate(center),\r\n  };\r\n}\r\n\r\nexport default class ExpoCircle extends React.Component {\r\n  setNativeProps(props) {\r\n    this.ref.setStyleIfChanged(this.props, localTransformProps(props));\r\n  }\r\n\r\n  render() {\r\n    const props = localTransformProps(this.props);\r\n    return <Circle ref={ref => (this.ref = ref)} {...props} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}