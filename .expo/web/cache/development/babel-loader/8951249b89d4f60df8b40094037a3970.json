{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { icon as createLeafletIcon } from 'leaflet';\nexport function parseIconProps(_ref) {\n  var icon = _ref.icon,\n      image = _ref.image,\n      pinColor = _ref.pinColor,\n      iconAnchor = _ref.anchor,\n      popupAnchor = _ref.calloutAnchor,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"image\", \"pinColor\", \"anchor\", \"calloutAnchor\"]);\n\n  var imageSource = icon || image;\n\n  if (imageSource) {\n    if (typeof imageSource === 'string') {\n      return createIcon(_objectSpread({\n        iconUrl: imageSource,\n        iconAnchor: iconAnchor,\n        popupAnchor: popupAnchor\n      }, props));\n    } else if (imageSource.iconUrl) {\n      return createIcon(_objectSpread({\n        iconAnchor: iconAnchor,\n        popupAnchor: popupAnchor\n      }, imageSource));\n    }\n  }\n\n  return undefined;\n}\nexport function createIcon(props) {\n  if (props == null || !Object.values(props).filter(Boolean).length) return undefined;\n  return createLeafletIcon(props);\n}","map":{"version":3,"sources":["E:/Project/react-native/lf/node_modules/react-native-maps/lib/web/Leaflet/utils/icons.js"],"names":["icon","createLeafletIcon","parseIconProps","image","pinColor","iconAnchor","anchor","popupAnchor","calloutAnchor","props","imageSource","createIcon","iconUrl","undefined","Object","values","filter","Boolean","length"],"mappings":";;;;;;;AAAA,SAASA,IAAI,IAAIC,iBAAjB,QAA0C,SAA1C;AAEA,OAAO,SAASC,cAAT,OAOJ;AAAA,MANDF,IAMC,QANDA,IAMC;AAAA,MALDG,KAKC,QALDA,KAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHOC,UAGP,QAHDC,MAGC;AAAA,MAFcC,WAEd,QAFDC,aAEC;AAAA,MADEC,KACF;;AACD,MAAMC,WAAW,GAAGV,IAAI,IAAIG,KAA5B;;AACA,MAAIO,WAAJ,EAAiB;AACf,QAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,aAAOC,UAAU;AAAGC,QAAAA,OAAO,EAAEF,WAAZ;AAAyBL,QAAAA,UAAU,EAAVA,UAAzB;AAAqCE,QAAAA,WAAW,EAAXA;AAArC,SAAqDE,KAArD,EAAjB;AACD,KAFD,MAEO,IAAIC,WAAW,CAACE,OAAhB,EAAyB;AAC9B,aAAOD,UAAU;AAAGN,QAAAA,UAAU,EAAVA,UAAH;AAAeE,QAAAA,WAAW,EAAXA;AAAf,SAA+BG,WAA/B,EAAjB;AACD;AACF;;AAED,SAAOG,SAAP;AACD;AAED,OAAO,SAASF,UAAT,CAAoBF,KAApB,EAA2B;AAChC,MAAIA,KAAK,IAAI,IAAT,IAAiB,CAACK,MAAM,CAACC,MAAP,CAAcN,KAAd,EAAqBO,MAArB,CAA4BC,OAA5B,EAAqCC,MAA3D,EAAmE,OAAOL,SAAP;AACnE,SAAOZ,iBAAiB,CAACQ,KAAD,CAAxB;AACD","sourcesContent":["import { icon as createLeafletIcon } from 'leaflet';\r\n\r\nexport function parseIconProps({\r\n  icon,\r\n  image,\r\n  pinColor,\r\n  anchor: iconAnchor,\r\n  calloutAnchor: popupAnchor,\r\n  ...props\r\n}) {\r\n  const imageSource = icon || image;\r\n  if (imageSource) {\r\n    if (typeof imageSource === 'string') {\r\n      return createIcon({ iconUrl: imageSource, iconAnchor, popupAnchor, ...props });\r\n    } else if (imageSource.iconUrl) {\r\n      return createIcon({ iconAnchor, popupAnchor, ...imageSource });\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function createIcon(props) {\r\n  if (props == null || !Object.values(props).filter(Boolean).length) return undefined;\r\n  return createLeafletIcon(props);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}